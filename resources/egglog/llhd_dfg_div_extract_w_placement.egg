; Bounding-Box
(datatype Point
    (P i64 i64)
)
(datatype BBox
    (Box Point Point)
)

; LLHD Opcodes
(datatype LLHDOpcode)
(declare And LLHDOpcode)
(declare Or LLHDOpcode)
(declare NAnd LLHDOpcode)
(declare NOr LLHDOpcode)
(declare Not LLHDOpcode)

; LLHD Instruction ID
(datatype LLHDInst
    (Inst i64)
)

; LLHD Value ID
(datatype LLHDValue
    (Value i64)
)

; LLHD "Gate"
(datatype LLHDGate
    (Gate LLHDInst LLHDOpcode LLHDValue LLHDValue LLHDValue)
    (Subcircuit2 LLHDGate LLHDGate)
    (Subcircuit3 LLHDGate LLHDGate LLHDGate)
)

; Divisor Extraction
(ruleset div-ext)
(rule (
  (Gate id_and1 And a c and1)
  (Gate id_and2 And b c and2)
  (Gate id_or1 Or and1 and2 out)
)((Subcircuit3
  (Gate id_and1 And a c and1)
  (Gate id_and2 And b c and2)
  (Gate id_or1 Or and1 and2 out)
)):ruleset div-ext)
(rewrite (Subcircuit3
  (Gate id_and1 And a c and1)
  (Gate id_and2 And b c and2)
  (Gate id_or1 Or and1 and2 out)
)(Subcircuit2
  (Gate id_and1 Or a b and1)
  (Gate id_or1 And and1 c out)
):ruleset div-ext)

; Entity Under Test
; ```llhd
; entity @test_entity (i1 %in1, i1 %in2, i1 %in3, i1 %in4) -> (i1$ %out1) {
;     %null = const time 0s 1e
;     %and1 = and i1 %in1, %in2
;     %and2 = and i1 %in3, %in4
;     %or1 = or i1 %and1, %and2
;     drv i1$ %out1, %or1, %null
; }
; ```
;
; Create Global Database Entries
(let and1_gate (Gate (Inst 1) And (Value 0) (Value 1) (Value 4)))
(let and2_gate (Gate (Inst 2) And (Value 2) (Value 1) (Value 5)))
(let or1_gate (Gate (Inst 3) Or (Value 4) (Value 5) (Value 6)))

; Run Divisor Extraction Rules & Rewrites
(run-schedule (saturate div-ext))

; Check for Extracted Divisor Gates
(let unextracted_divisor_subcircuit (Subcircuit3
  (Gate (Inst 1) And (Value 0) (Value 1) (Value 4))
  (Gate (Inst 2) And (Value 2) (Value 1) (Value 5))
  (Gate (Inst 3) Or (Value 4) (Value 5) (Value 6))
))
(let extracted_divisor_subcircuit (Subcircuit2
  (Gate (Inst 1) Or (Value 0) (Value 2) (Value 4))
  (Gate (Inst 3) And (Value 4) (Value 1) (Value 6))
))
(check (= unextracted_divisor_subcircuit extracted_divisor_subcircuit))

